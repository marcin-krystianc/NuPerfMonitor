name: benchmark_dotnet

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 */8 * * *' # Run workflow threee times a day
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  benchmark_dotnet_windows:
    strategy:
      matrix:
        test_script: [NuGetClient-win-d76a117]
      fail-fast: false
    runs-on: windows-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: code

      - name: Benchmark
        shell: pwsh
        run: |
          .\code\scripts\perftests\testCases\${{matrix.test_script}}.ps1
          Rename-Item -Path "results.csv" -NewName "${{matrix.test_script}}.csv"
          
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.test_script}}
          path: ${{matrix.test_script}}.csv
          
  benchmark_dotnet_linux:
    strategy:
      matrix:
        test_script: [LargeAppCPM-142722b, LargeAppCPM-nostaticgraph-142722b, OrchardCore-5dbd92c, Orleans-eda972a]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: code

      - name: Benchmark
        shell: pwsh
        run: |
          .\code\scripts\perftests\testCases\${{matrix.test_script}}.ps1
          Rename-Item -Path "results.csv" -NewName "${{matrix.test_script}}.csv"
          
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.test_script}}
          path: ${{matrix.test_script}}.csv

  process_data:
    runs-on: ubuntu-latest
    needs: [benchmark_dotnet_windows, benchmark_dotnet_linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pip3 install -r requirements.txt
        
      - uses: actions/download-artifact@v3
        with:
         path: artifacts

      - name: Display structure of downloaded files
        run: ls -R
            
      - name: Process data
        shell: pwsh
        run: |
          Get-ChildItem -File -Path artifacts -Depth 1 | Foreach {. python3 process_results.py $_.fullname data.csv}
            
      - name: Upload data
        uses: actions/upload-artifact@v3
        with:
          name: data
          path: data.csv

      - name: Generate graph with Plotly for Python
        if: ${{ false }}
        shell: pwsh
        run: |
          . python3 generate_html.py data.csv index-python.html

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: 'data.csv'